name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  actions: read
  checks: write

jobs:
  prepare:
    name: Install & Cache
    runs-on: ubuntu-latest
    outputs:
      node-version: '20'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v6
        with:
          node-version: 20
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Cache node_modules (copy)
        run: tar -czf node_modules.tgz node_modules
      - name: Upload deps artifact
        uses: actions/upload-artifact@v4
        with:
          name: deps-node_modules
          path: node_modules.tgz

  lint:
    name: Lint & Format Check
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download deps
        uses: actions/download-artifact@v4
        with:
          name: deps-node_modules
      - name: Extract deps
        run: tar -xzf node_modules.tgz
      - name: Check formatting
        run: npm run format:check
      - name: Lint
        run: npm run lint

  test:
    name: Test & Coverage
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download deps
        uses: actions/download-artifact@v4
        with:
          name: deps-node_modules
      - name: Extract deps
        run: tar -xzf node_modules.tgz
      - name: Test
        run: npm test -- --coverage
      - name: Upload coverage report
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage

  build:
    name: Build & Dist Freshness
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download deps
        uses: actions/download-artifact@v4
        with:
          name: deps-node_modules
      - name: Extract deps
        run: tar -xzf node_modules.tgz
      - name: Build Action bundle
        run: npm run build
      - name: Verify dist is up to date
        run: |
          if ! git diff --quiet --exit-code -- dist; then
            echo '::error::dist/ is not up to date. Run npm run build and commit the changes.'
            git --no-pager diff -- dist
            exit 1
          fi
